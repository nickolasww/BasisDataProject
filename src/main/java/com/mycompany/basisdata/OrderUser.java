/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.basisdata;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.util.Random;


/**
 *
 * @author pinkg
 */
public class OrderUser extends javax.swing.JFrame {
     private java.sql.Connection connection;
      private final String connectionUrl =
            "jdbc:sqlserver://PC-001:1433;"
            + "database= TUGASAKHIRFINAL;"
            + "user=sa;"
            + "password= alfredorm123;"
            + "encrypt=true;"
            + "trustServerCertificate=true;"
            + "loginTimeout=30;";
      
 public OrderUser() {
        initComponents();
        // Other initializations, use userEmail where needed
    }
    public void establishConnection() {
    try {
        connection = java.sql.DriverManager.getConnection("jdbc:sqlserver://localhost\\PC-001:1433;databaseName=DUMMYDATATEST;encrypt=true;trustServerCertificate=true","sa","alfredorm123");
    } catch (SQLException e) {
        System.out.println("Failed");
        Logger.getLogger(ProfileUser.class.getName()).log(Level.SEVERE, "Database connection error", e);
        JOptionPane.showMessageDialog(this, "Failed to connect to the database.");
    }
}

    /**
     * Creates new form OrderUser
     */
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Select Menu (order 1 menu each time)");

        jComboBox1.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                jComboBox1PopupMenuWillBecomeVisible(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Select Restaurant");

        jButton1.setBackground(new java.awt.Color(0, 255, 0));
        jButton1.setText("Order");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Quantity");

        jComboBox2.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                jComboBox2PopupMenuWillBecomeVisible(evt);
            }
        });
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Money:");

        jTextField2.setEditable(false);
        jTextField2.setText("click to display balance");
        jTextField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField2FocusGained(evt);
            }
        });
        jTextField2.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                jTextField2MouseWheelMoved(evt);
            }
        });
        jTextField2.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jTextField2ComponentShown(evt);
            }
        });
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2)
                            .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE))))
                .addContainerGap(144, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(240, 240, 240))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton2.setText("Back to Menu");
        jButton2.setToolTipText("");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("SUPERWINGS ");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("===============");
        jLabel8.setToolTipText("");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("===============");
        jLabel9.setToolTipText("");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("ORDER");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(50, 186, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(312, 312, 312)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(108, 108, 108))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
          establishConnection();

    // Generate a random order ID
    Random random = new Random();
    int orderId = random.nextInt(1000000); // Generate a random ID (0 to 999999)

    // Get the selected restaurant, menu, and quantity
    String selectedRestaurant = (String) jComboBox1.getSelectedItem();
    String selectedMenu = (String) jComboBox2.getSelectedItem();
    int quantity = Integer.parseInt(jTextField1.getText()); // Assuming there's a text field for quantity

    // Validate selections and inputs
    if (selectedRestaurant == null || selectedMenu == null || quantity <= 0||selectedRestaurant==""||selectedMenu=="") {
        JOptionPane.showMessageDialog(this, "Please select a restaurant, menu item, and enter a valid quantity!", 
                                      "Input Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        // Fetch the price of the selected menu item
        String priceQuery = "SELECT MENU_PRICE FROM MENU WHERE MENU_NAME = ?";
        String jalanQuery = "SELECT CUST_JALAN FROM CUSTOMER WHERE ID_CUSTOMER = ?";
        String kelurahanQuery = "SELECT CUST_KELURAHAN FROM CUSTOMER WHERE ID_CUSTOMER = ?";
        String kecamatanQuery = "SELECT REST_KECAMATAN FROM RESTAURANT WHERE REST_KECAMATAN = ?";
        String kodeposQuery = "SELECT CUST_KODE_POS FROM CUSTOMER WHERE ID_CUSTOMER = ?";

        PreparedStatement jalanStatement = connection.prepareStatement(jalanQuery);
        jalanStatement.setInt(1, 1); // Replace 1 with the actual customer ID

        PreparedStatement kelurahanStatement = connection.prepareStatement(kelurahanQuery);
        kelurahanStatement.setInt(1, 1); // Replace 1 with the actual customer ID

        PreparedStatement kecamatanStatement = connection.prepareStatement(kecamatanQuery);
        kecamatanStatement.setString(1, selectedRestaurant); // Replace with actual customer ID or restaurant data

        PreparedStatement kodeposStatement = connection.prepareStatement(kodeposQuery);
        kodeposStatement.setInt(1, 1); // Replace 1 with the actual customer ID

        PreparedStatement priceStatement = connection.prepareStatement(priceQuery);
        priceStatement.setString(1, selectedMenu);
        ResultSet priceResult = priceStatement.executeQuery();
        ResultSet jalanResult = jalanStatement.executeQuery();
        ResultSet kelurahanResult = kelurahanStatement.executeQuery();
        ResultSet kecamatanResult = kecamatanStatement.executeQuery();
        ResultSet kodeposResult = kodeposStatement.executeQuery();

        String jalan = "", kelurahan = "", kecamatan = "", kodepos = "";

        if (jalanResult.next()) {
            jalan = jalanResult.getString("CUST_JALAN");
        }
        if (kelurahanResult.next()) {
            kelurahan = kelurahanResult.getString("CUST_KELURAHAN");
        }
        if (kecamatanResult.next()) {
            kecamatan = kecamatanResult.getString("CUST_KECAMATAN");
        }
        if (kodeposResult.next()) {
            kodepos = kodeposResult.getString("CUST_KODE_POS");
        }

        if (priceResult.next()) {
            float price = priceResult.getFloat("MENU_PRICE");
            float totalPrice = price * quantity; // Calculate total price

            // Fetch the current balance
            String balanceQuery = "SELECT BALANCE FROM CUSTOMER WHERE ID_CUSTOMER = ?";
            PreparedStatement balanceStatement = connection.prepareStatement(balanceQuery);
            balanceStatement.setInt(1, 1); // Replace 1 with the actual customer ID
            ResultSet balanceResult = balanceStatement.executeQuery();

            if (balanceResult.next()) {
                double balance = balanceResult.getDouble("BALANCE");

                // Check if the customer has enough balance
                if (balance >= totalPrice) {
                    // Deduct the total price from the balance
                    double newBalance = balance - totalPrice;

                    // Update the balance in the database
                    String updateBalanceQuery = "UPDATE CUSTOMER SET BALANCE = ? WHERE ID_CUSTOMER = ?";
                    PreparedStatement updateBalanceStatement = connection.prepareStatement(updateBalanceQuery);
                    updateBalanceStatement.setDouble(1, newBalance);
                    updateBalanceStatement.setInt(2, 1); // Replace 1 with the actual customer ID
                    updateBalanceStatement.executeUpdate();

                    // Insert the order into the ORDER table
                    String orderQuery = "INSERT INTO \"ORDER\" (ID_ORDER, ORD_PRICE, ORD_QUANTITY, ORD_DATE, ORD_PAYMENT, ORD_STATUS, ORD_JALAN, ORD_KELURAHAN, ORD_KECAMATAN, ORD_KODE_POS, DRIVER_ID_DRIVER, DELIVERY_ID_DELIVERY) "
                            + "VALUES (?, ?, ?, CURRENT_TIMESTAMP, ?, ?, ?, ?, ?, ?, ?, ?)";
                    PreparedStatement orderStatement = connection.prepareStatement(orderQuery);
                    orderStatement.setInt(1, orderId);
                    orderStatement.setFloat(2, totalPrice); // ORD_PRICE
                    orderStatement.setInt(3, quantity); // ORD_QUANTITY
                    orderStatement.setString(4, "Credit Card"); // ORD_PAYMENT
                    orderStatement.setString(5, "Delivered"); // ORD_STATUS
                    orderStatement.setString(6, jalan); // ORD_JALAN
                    orderStatement.setString(7, kelurahan); // ORD_KELURAHAN
                    orderStatement.setString(8, kecamatan); // ORD_KECAMATAN
                    orderStatement.setString(9, kodepos); // ORD_KODE_POS
                    orderStatement.setInt(10, 1); // DRIVER_ID_DRIVER
                    orderStatement.setInt(11, 1); // DELIVERY_ID_DELIVERY
                    orderStatement.executeUpdate();

                    // Insert into CUSTOMER_ORDER table
                    String customerOrderQuery = "INSERT INTO CUSTOMER_ORDER (CUSTOMER_ID_CUSTOMER, ORDER_ID_ORDER) VALUES (?, ?)";
                    PreparedStatement customerOrderStatement = connection.prepareStatement(customerOrderQuery);
                    customerOrderStatement.setInt(1, 1); // Replace 1 with actual customer ID
                    customerOrderStatement.setInt(2, orderId);
                    customerOrderStatement.executeUpdate();
                    
                        

                    // Show success message
                    JOptionPane.showMessageDialog(this, "Order placed successfully! Total: " + totalPrice, 
                                                  "Success", JOptionPane.INFORMATION_MESSAGE);

                    // Update the balance displayed in the UI
                    jTextField2.setText(String.format("Rp %.2f", newBalance)); // Update balance in UI
                } else {
                    JOptionPane.showMessageDialog(this, "Insufficient balance. Please add funds.",
                                                  "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Customer not found.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Menu item not found.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        Logger.getLogger(OrderUser.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, "An error occurred while processing the order.", 
                                      "Database Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
           Menu menu=new Menu();
           menu.setVisible(true);  // This will show the Menu frame
           
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
          

        
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
       

        
        

    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
     
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTextField2MouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jTextField2MouseWheelMoved
        // TODO add your handling code here:
        

    }//GEN-LAST:event_jTextField2MouseWheelMoved

    private void jTextField2ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTextField2ComponentShown
       

    }//GEN-LAST:event_jTextField2ComponentShown

    private void jTextField2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField2FocusGained
        // TODO add your handling code here:
         // TODO add your handling code here:
               establishConnection();

         try{
            PreparedStatement pstmt = connection.prepareStatement("SELECT BALANCE FROM customer WHERE ID_CUSTOMER= ?");
            pstmt.setInt(1,1);
         ResultSet rs=pstmt.executeQuery();
         if (rs.next()) {
            // Ambil saldo pelanggan
            double balance = rs.getDouble("balance");

                // Perbarui JTextField dengan saldo pelanggan
                jTextField2.setText(String.format("Rp %f", balance));
            } else {
                JOptionPane.showMessageDialog(this, "Pelanggan tidak ditemukan.");
            }

        } catch (SQLException ex) {
            Logger.getLogger(OrderUser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTextField2FocusGained

    private void jComboBox1PopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jComboBox1PopupMenuWillBecomeVisible
        // TODO add your handling code here:
          establishConnection();
        String query="SELECT REST_NAME FROM RESTAURANT";
        try(PreparedStatement preparedStatement=connection.prepareStatement(query)){
            ResultSet resultSet =preparedStatement.executeQuery();
            while (resultSet.next()) {
                jComboBox1.addItem(resultSet.getString("rest_name"));
            }
            resultSet.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_jComboBox1PopupMenuWillBecomeVisible

    private void jComboBox2PopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jComboBox2PopupMenuWillBecomeVisible
        // TODO add your handling code here:
         establishConnection();
        String query = "SELECT men.MENU_NAME, RESTAURANT.REST_NAME " +
               "FROM MENU men " +
               "JOIN RESTAURANT ON men.RESTAURANT_ID_RESTAURANT = RESTAURANT.ID_RESTAURANT " +
               "WHERE RESTAURANT.REST_NAME = ?";
    try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
    preparedStatement.setString(1, jComboBox1.getSelectedItem().toString());
    
    ResultSet resultSet = preparedStatement.executeQuery();
    jComboBox2.removeAllItems(); // Clear previous items
    int rowCount = 0;

    while (resultSet.next()) {
            String menuName = resultSet.getString("MENU_NAME"); // Correct column name
            System.out.println("Adding Menu: " + menuName); // Debugging
            jComboBox2.addItem(menuName);
            rowCount++;    }
    resultSet.close();
}        catch (SQLException ex) {
             Logger.getLogger(OrderUser.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_jComboBox2PopupMenuWillBecomeVisible

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
